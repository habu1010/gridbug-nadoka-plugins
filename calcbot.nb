# -*-ruby; coding: utf-8 -*- vim:set ft=ruby:

class CalcBot < Nadoka::NDK_Bot
  @@FUNCS = 'acos|asin|atan|atan2|acosh|asinh|atanh|cos|sin|tan|cosh|sinh|tanh|erf|erfc|exp|frexp|hypot|ldexp|log|log2|log10|sqrt|E|PI'
  @@DICE = '\d*d\d+'
  def bot_initialize
    @available_channel = @bot_config[:ch] || /.*/
  end

  def on_privmsg prefix, ch, msg
    if /\Acalc[>\s]\s*(.+)\s*/ =~ msg.toutf8
      formula = $1
      if /^([\s\d+\-*\/().,]|#{@@FUNCS}|#{@@DICE})+$/ =~ formula
        begin
          send_notice(ch, "#{formula} = #{calc_formula(formula)}")
        rescue Exception => e
          send_notice(ch, "#{formula}: #{e.message}")
        end
      else
        send_notice(ch, "#{formula}: wrong formula.")
      end
    end
  end

  private
  def calc_formula(formula)
    formula = formula.clone
    # ダイスの部分を期待値に置き変え
    formula.gsub!(/#{@@DICE}/) {|m| dice_expectation(m)}
    # 数学関数をMath::func()に置き変え
    formula.gsub!(/(#{@@FUNCS})/, "Math::\\1")

    result = Thread.new {
      $SAFE = 4
      eval formula
    }.value.to_s

    raise "calculation result is too long." if result.size > 200

    return result
  end

  private
  def dice_expectation(dice)
    if /^(\d*)d(\d+)$/ =~ dice
      count = $1.empty? ? 1 : $1.to_i
      side = $2.to_i
      count * (side + 1) / 2.0
    end
  end
end
